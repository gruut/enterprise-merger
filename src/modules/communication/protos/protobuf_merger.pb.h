// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf_merger.proto

#ifndef PROTOBUF_INCLUDED_protobuf_5fmerger_2eproto
#define PROTOBUF_INCLUDED_protobuf_5fmerger_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_5fmerger_2eproto 

namespace protobuf_protobuf_5fmerger_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_protobuf_5fmerger_2eproto
namespace grpc_merger {
class ConnCheckRequest;
class ConnCheckRequestDefaultTypeInternal;
extern ConnCheckRequestDefaultTypeInternal _ConnCheckRequest_default_instance_;
class ConnCheckResponse;
class ConnCheckResponseDefaultTypeInternal;
extern ConnCheckResponseDefaultTypeInternal _ConnCheckResponse_default_instance_;
class MergerDataReply;
class MergerDataReplyDefaultTypeInternal;
extern MergerDataReplyDefaultTypeInternal _MergerDataReply_default_instance_;
class MergerDataRequest;
class MergerDataRequestDefaultTypeInternal;
extern MergerDataRequestDefaultTypeInternal _MergerDataRequest_default_instance_;
}  // namespace grpc_merger
namespace google {
namespace protobuf {
template<> ::grpc_merger::ConnCheckRequest* Arena::CreateMaybeMessage<::grpc_merger::ConnCheckRequest>(Arena*);
template<> ::grpc_merger::ConnCheckResponse* Arena::CreateMaybeMessage<::grpc_merger::ConnCheckResponse>(Arena*);
template<> ::grpc_merger::MergerDataReply* Arena::CreateMaybeMessage<::grpc_merger::MergerDataReply>(Arena*);
template<> ::grpc_merger::MergerDataRequest* Arena::CreateMaybeMessage<::grpc_merger::MergerDataRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace grpc_merger {

// ===================================================================

class MergerDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc_merger.MergerDataRequest) */ {
 public:
  MergerDataRequest();
  virtual ~MergerDataRequest();

  MergerDataRequest(const MergerDataRequest& from);

  inline MergerDataRequest& operator=(const MergerDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MergerDataRequest(MergerDataRequest&& from) noexcept
    : MergerDataRequest() {
    *this = ::std::move(from);
  }

  inline MergerDataRequest& operator=(MergerDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MergerDataRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MergerDataRequest* internal_default_instance() {
    return reinterpret_cast<const MergerDataRequest*>(
               &_MergerDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MergerDataRequest* other);
  friend void swap(MergerDataRequest& a, MergerDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MergerDataRequest* New() const final {
    return CreateMaybeMessage<MergerDataRequest>(NULL);
  }

  MergerDataRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MergerDataRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MergerDataRequest& from);
  void MergeFrom(const MergerDataRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MergerDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:grpc_merger.MergerDataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protobuf_5fmerger_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MergerDataReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc_merger.MergerDataReply) */ {
 public:
  MergerDataReply();
  virtual ~MergerDataReply();

  MergerDataReply(const MergerDataReply& from);

  inline MergerDataReply& operator=(const MergerDataReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MergerDataReply(MergerDataReply&& from) noexcept
    : MergerDataReply() {
    *this = ::std::move(from);
  }

  inline MergerDataReply& operator=(MergerDataReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MergerDataReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MergerDataReply* internal_default_instance() {
    return reinterpret_cast<const MergerDataReply*>(
               &_MergerDataReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MergerDataReply* other);
  friend void swap(MergerDataReply& a, MergerDataReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MergerDataReply* New() const final {
    return CreateMaybeMessage<MergerDataReply>(NULL);
  }

  MergerDataReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MergerDataReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MergerDataReply& from);
  void MergeFrom(const MergerDataReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MergerDataReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool checker = 1;
  void clear_checker();
  static const int kCheckerFieldNumber = 1;
  bool checker() const;
  void set_checker(bool value);

  // @@protoc_insertion_point(class_scope:grpc_merger.MergerDataReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool checker_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protobuf_5fmerger_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConnCheckRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc_merger.ConnCheckRequest) */ {
 public:
  ConnCheckRequest();
  virtual ~ConnCheckRequest();

  ConnCheckRequest(const ConnCheckRequest& from);

  inline ConnCheckRequest& operator=(const ConnCheckRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnCheckRequest(ConnCheckRequest&& from) noexcept
    : ConnCheckRequest() {
    *this = ::std::move(from);
  }

  inline ConnCheckRequest& operator=(ConnCheckRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnCheckRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnCheckRequest* internal_default_instance() {
    return reinterpret_cast<const ConnCheckRequest*>(
               &_ConnCheckRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ConnCheckRequest* other);
  friend void swap(ConnCheckRequest& a, ConnCheckRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnCheckRequest* New() const final {
    return CreateMaybeMessage<ConnCheckRequest>(NULL);
  }

  ConnCheckRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConnCheckRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConnCheckRequest& from);
  void MergeFrom(const ConnCheckRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnCheckRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool checker = 1;
  void clear_checker();
  static const int kCheckerFieldNumber = 1;
  bool checker() const;
  void set_checker(bool value);

  // @@protoc_insertion_point(class_scope:grpc_merger.ConnCheckRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool checker_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protobuf_5fmerger_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConnCheckResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:grpc_merger.ConnCheckResponse) */ {
 public:
  ConnCheckResponse();
  virtual ~ConnCheckResponse();

  ConnCheckResponse(const ConnCheckResponse& from);

  inline ConnCheckResponse& operator=(const ConnCheckResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnCheckResponse(ConnCheckResponse&& from) noexcept
    : ConnCheckResponse() {
    *this = ::std::move(from);
  }

  inline ConnCheckResponse& operator=(ConnCheckResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnCheckResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnCheckResponse* internal_default_instance() {
    return reinterpret_cast<const ConnCheckResponse*>(
               &_ConnCheckResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ConnCheckResponse* other);
  friend void swap(ConnCheckResponse& a, ConnCheckResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnCheckResponse* New() const final {
    return CreateMaybeMessage<ConnCheckResponse>(NULL);
  }

  ConnCheckResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConnCheckResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConnCheckResponse& from);
  void MergeFrom(const ConnCheckResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnCheckResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:grpc_merger.ConnCheckResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_protobuf_5fmerger_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MergerDataRequest

// bytes data = 1;
inline void MergerDataRequest::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MergerDataRequest::data() const {
  // @@protoc_insertion_point(field_get:grpc_merger.MergerDataRequest.data)
  return data_.GetNoArena();
}
inline void MergerDataRequest::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc_merger.MergerDataRequest.data)
}
#if LANG_CXX11
inline void MergerDataRequest::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:grpc_merger.MergerDataRequest.data)
}
#endif
inline void MergerDataRequest::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc_merger.MergerDataRequest.data)
}
inline void MergerDataRequest::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc_merger.MergerDataRequest.data)
}
inline ::std::string* MergerDataRequest::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:grpc_merger.MergerDataRequest.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MergerDataRequest::release_data() {
  // @@protoc_insertion_point(field_release:grpc_merger.MergerDataRequest.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MergerDataRequest::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:grpc_merger.MergerDataRequest.data)
}

// -------------------------------------------------------------------

// MergerDataReply

// bool checker = 1;
inline void MergerDataReply::clear_checker() {
  checker_ = false;
}
inline bool MergerDataReply::checker() const {
  // @@protoc_insertion_point(field_get:grpc_merger.MergerDataReply.checker)
  return checker_;
}
inline void MergerDataReply::set_checker(bool value) {
  
  checker_ = value;
  // @@protoc_insertion_point(field_set:grpc_merger.MergerDataReply.checker)
}

// -------------------------------------------------------------------

// ConnCheckRequest

// bool checker = 1;
inline void ConnCheckRequest::clear_checker() {
  checker_ = false;
}
inline bool ConnCheckRequest::checker() const {
  // @@protoc_insertion_point(field_get:grpc_merger.ConnCheckRequest.checker)
  return checker_;
}
inline void ConnCheckRequest::set_checker(bool value) {
  
  checker_ = value;
  // @@protoc_insertion_point(field_set:grpc_merger.ConnCheckRequest.checker)
}

// -------------------------------------------------------------------

// ConnCheckResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpc_merger

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_protobuf_5fmerger_2eproto
